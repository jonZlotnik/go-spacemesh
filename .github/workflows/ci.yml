name: CI

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

on:  
  push:
    branches:
      - '*'
jobs:
  test-gcp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: generate RANDOM unique variable based on timestamp
      run: echo RANDOM=test-$(date +%s) >> $GITHUB_ENV
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        # GCP_CREDENTIALS is minified JSON of service account
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Configure gcloud
      uses: 'google-github-actions/setup-gcloud@v0'

    # - name: 'Create Node Pool'
    #   run: 'gcloud container node-pools create ${{ env.RANDOM }} --cluster=${{ secrets.CI_CLUSTER_NAME }} --num-nodes=1 --zone=${{ secrets.CI_ZONE_NAME }} --machine-type=n1-standard-16'

    - name: Configure kubectl
      run: gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} --zone ${{ secrets.CI_ZONE_NAME }} --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push go-spacemesh build to dockerhub
      run: make dockerpush

    - name: Get branch
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=branch_name::$(git rev-parse --abbrev-ref HEAD)"

    - name: Get commit hash
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Push go-spacemesh build to dockerhub
      run: docker tag go-spacemesh-dev:${{ steps.vars.outputs.branch_name }} spacemeshos/go-spacemesh-dev:${{ steps.vars.outputs.sha_short }} && docker push spacemeshos/go-spacemesh-dev:${{ steps.vars.outputs.sha_short }}
  
    - name: Build tests docker image
      run: cd tests && make docker

    - name: Push tests docker images
      run: cd tests && make push

    - name: Run tests
      run: cd tests && make run test_name=TestSmeshing

   

    - name: Systemtest result
      run: kubectl get logs systest-${{ steps.vars.outputs.sha_short }}
    
    - name: Delete pod
      run: kubectl delete pod systest-${{ steps.vars.outputs.sha_short }}
    
    # - name: 'Delete Node Pool'
    #   run: 'yes | gcloud container node-pools delete ${{ env.RANDOM }} --cluster=${{ secrets.CI_CLUSTER_NAME }} --zone=${{ secrets.CI_ZONE_NAME }}'
